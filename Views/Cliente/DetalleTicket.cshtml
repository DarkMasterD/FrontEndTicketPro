@model FrontEndTicketPro.Models.TicketDetalleViewModel
@{
    ViewData["Title"] = "Detalle del ticket";
}

<div class="container mt-4 p-4 rounded bg-white shadow-sm">
    <h3 class="text-center fw-bold mb-4">📋 Detalle del ticket</h3>

    <div class="row">
        <div class="col-md-6">
            <label class="form-label">Título:</label>
            <input class="form-control" value="@Model.Titulo" readonly />

            <label class="form-label mt-3">Aplicación o servicio:</label>
            <input class="form-control" value="@Model.Servicio" readonly />

            <label class="form-label mt-3">Descripción:</label>
            <textarea class="form-control" rows="4" readonly>@Model.Descripcion</textarea>

            @if (Model.Progresos != null && Model.Progresos.Any())
            {
                <label class="form-label mt-4">Progreso:</label>
                @foreach (var p in Model.Progresos)
                {
                    <div class="border rounded p-2 mb-2">
                        <strong>Técnico:</strong> @p.NombreTecnico<br />
                        -@p.Descripcion<br />
                        <span class="text-muted">@p.Fecha.ToString("dd/MM/yyyy")</span>
                    </div>
                }
            }
        </div>

        <div class="col-md-6">
            <label class="form-label">Ticket:</label>
            <input class="form-control" value="#@Model.Codigo" readonly />

            <label class="form-label mt-3">Categoría:</label>
            <input class="form-control" value="@Model.Categoria" readonly />

            <label class="form-label mt-3">Prioridad:</label>
            <input class="form-control border-danger text-danger fw-bold" value="@Model.Prioridad" readonly />

            <label class="form-label mt-3">Estado:</label><br />
            <span class="badge bg-@Model.GetEstadoColor()">@Model.Estado</span>

            <div class="mt-4">
                <button class="btn btn-secondary" data-bs-toggle="modal" data-bs-target="#modalArchivo">Subir archivo</button>
            </div>
        </div>
    </div>

    <div class="text-center mt-5">
        <a asp-action="MisTickets" asp-controller="Cliente" class="btn btn-outline-dark">Regresar</a>
    </div>
</div>

<!-- Modal para subir archivo -->
<div class="modal fade" id="modalArchivo" tabindex="-1" aria-labelledby="modalArchivoLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Subir archivo solicitado</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="formSubirArchivo">
                    <input type="hidden" id="ticketId" value="@Model.IdTicket" />
                    <div class="mb-3">
                        <label class="form-label">Seleccione una imagen o PDF que ayude a describir el problema</label>
                        <input type="file" class="form-control" id="archivoInput" accept=".jpg,.jpeg,.png,.pdf" required />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Comentario:</label>
                        <textarea class="form-control" id="comentarioArchivo" rows="3"></textarea>
                    </div>
                    <div class="d-flex justify-content-end">
                        <button type="button" class="btn btn-outline-secondary me-2" data-bs-dismiss="modal">Cancelar</button>
                        <button type="submit" class="btn btn-success">Subir</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.getElementById("formSubirArchivo").addEventListener("submit", async function (event) {
            event.preventDefault();

            const ticketId = document.getElementById("ticketId").value;
            const archivo = document.getElementById("archivoInput").files[0];

            if (!archivo) return alert("Seleccione un archivo válido.");

            const formData = new FormData();
            formData.append("archivo", archivo);
            formData.append("id_ticket", ticketId);

            try {
                const response = await fetch("https://localhost:7141/api/ticket/subir-archivo", {
                    method: "POST",
                    body: formData
                });

                if (!response.ok) {
                    const error = await response.text();
                    throw new Error(error);
                }

                alert("Archivo subido correctamente ✅");
                document.getElementById("formSubirArchivo").reset();
                const modal = bootstrap.Modal.getInstance(document.getElementById("modalArchivo"));
                modal.hide();
                window.location.reload();
            } catch (err) {
                console.error("Error:", err);
                alert("Error al subir el archivo.");
            }
        });
    </script>
}
