@model FrontEndTicketPro.Models.Admin.TicketsAdminViewModel
@{
    ViewData["Title"] = "Gestión de Tickets - Administrador";
}

<div class="container mt-4 bg-white p-4 rounded">
    <h3 class="fw-bold mb-4">Gestión de Tickets</h3>
    <form method="get" asp-action="TodosTickets" id="formFiltros" class="row g-3 mb-3 align-items-end">
        <div class="col-md-6">
            <label class="form-label">Buscar por título o cliente</label>
            <div class="input-group">
                <input type="text" class="form-control" name="buscarTexto" placeholder="Buscar…" value="@Model.Busqueda" id="inputBusqueda" />
                <button type="submit" class="btn btn-dark">
                    <i class="bi bi-search"></i>
                </button>
            </div>
        </div>

        <div class="col-md-3">
            <label class="form-label">Estado</label>
            <select class="form-select" name="estado" id="selectEstado">
                <option value="">Filtrar por estado</option>
                <option value="En progreso" selected="@(Model.Estado == "En progreso")">En progreso</option>
                <option value="No asignado" selected="@(Model.Estado == "No asignado")">No asignado</option>
                <option value="Resuelto" selected="@(Model.Estado == "Resuelto")">Resuelto</option>
            </select>
        </div>

        <div class="col-md-3">
            <label class="form-label">Prioridad</label>
            <select class="form-select" name="prioridad" id="selectPrioridad">
                <option value="">Filtrar por prioridad</option>
                <option value="Crítico" selected="@(Model.Prioridad == "Crítico")">Crítico</option>
                <option value="Importante" selected="@(Model.Prioridad == "Importante")">Importante</option>
                <option value="Baja" selected="@(Model.Prioridad == "Baja")">Baja</option>
            </select>
        </div>
    </form>

    <div class="table-responsive">
        <table class="table table-bordered align-middle text-center">
            <thead class="table-light">
                <tr>
                    <th>Título del ticket</th>
                    <th>Cliente</th>
                    <th>Técnico</th>
                    <th>Estado</th>
                    <th>Prioridad</th>
                    <th>Fecha</th>
                    <th>Acciones</th>
                </tr>
            </thead>
            <tbody>
                @if (Model.TicketsFiltrados.Any())
                {
                    foreach (var t in Model.TicketsFiltrados)
                    {
                        <tr>
                            <td>@t.Titulo</td>
                            <td>@t.Cliente</td>
                            <td>@(string.IsNullOrEmpty(t.Tecnico) ? "No asignado" : t.Tecnico)</td>
                            <td>
                                <span class="badge @(t.Estado == "Resuelto" ? "bg-success" :
                                                   t.Estado == "No asignado" ? "bg-warning text-dark" : "bg-primary")">@t.Estado</span>
                            </td>
                            <td>
                                <span class="badge @(t.Prioridad == "Crítico" ? "bg-danger" :
                                                   t.Prioridad == "Importante" ? "bg-info text-dark" : "bg-warning text-dark")">@t.Prioridad</span>
                            </td>
                            <td>@t.Fecha.ToString("MM/dd/yy")</td>
                            <td>
                                <a href="#" class="btn btn-sm text-light btn-asignar" data-id="@t.IdTicket" style="background: #8FD344;">Asignar</a>
                                <a asp-controller="Admin" asp-action="DetalleTicket" asp-route-id="@t.IdTicket"
                                    class="btn btn-info btn-sm text-white" style="background: #3498DB">
                                    Ver
                                </a>
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="7" class="text-center text-muted">No se encontraron tickets con esos filtros.</td>
                    </tr>
                }
            </tbody>
        </table>

         @* Modal asignar tarea *@
        <div id="modalAsignar" class="modal fade" tabindex="-1" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered">
                <div class="modal-content p-4" style="border-radius: 1rem; border: none;">
                    <div class="d-flex justify-content-between align-items-center mb-3">
                        <h5 class="fw-bold">Agregar tarea al ticket #<span id="idTicketTexto"></span></h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>

                    <input type="hidden" id="idTicketHidden" />

                    <div class="mb-4">
                        <label class="form-label fw-semibold">Título de la tarea</label>
                        <input type="text" class="form-control rounded-pill px-4 py-2" placeholder="Ingrese el título de la tarea" id="tituloTarea" />
                    </div>

                    <div class="mb-4">
                        <label class="form-label fw-semibold">Seleccionar técnico</label>
                        <select class="form-select rounded-pill px-4 py-2" id="tecnicoSelect">
                            <option value="">Seleccione un técnico</option>
                            <!-- Técnicos se llenarán dinámicamente -->
                        </select>
                    </div>

                    <div class="mb-4">
                        <label class="form-label fw-semibold">Descripción tarea</label>
                        <textarea class="form-control px-4 py-2" placeholder="Ingrese la descripción" id="descripcionTarea" rows="4" style="border-radius: 0.75rem;"></textarea>
                    </div>

                    <div class="d-flex justify-content-between mt-3">
                        <button class="btn btn-link text-success" data-bs-dismiss="modal">Cancelar</button>
                        <button class="btn text-white px-4" style="background-color: #8FD344;" id="btnGuardarTarea">Guardar</button>
                    </div>
                </div>
            </div>
        </div>


    </div>
</div>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        const form = document.getElementById("formFiltros");
        const inputBusqueda = document.getElementById("inputBusqueda");
        const selectEstado = document.querySelector("select[name='estado']");
        const selectPrioridad = document.querySelector("select[name='prioridad']");

        let debounceTimer;
        inputBusqueda.addEventListener("input", function () {
            clearTimeout(debounceTimer);
            debounceTimer = setTimeout(() => {
                form.requestSubmit(); 
            }, 500);
        });

        selectEstado.addEventListener("change", () => form.requestSubmit());
        selectPrioridad.addEventListener("change", () => form.requestSubmit());
    });
</script>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        const modalAsignar = new bootstrap.Modal(document.getElementById("modalAsignar"));

        document.querySelectorAll(".btn-asignar").forEach(btn => {
            btn.addEventListener("click", async function (e) {
                e.preventDefault();
                const id = this.getAttribute("data-id");
                document.getElementById("idTicketHidden").value = id;
                document.getElementById("idTicketTexto").textContent = id;

                // Cargar técnicos
                const select = document.getElementById("tecnicoSelect");
                select.innerHTML = `<option value="">Seleccione un técnico</option>`;

                const res = await fetch("/Admin/ObtenerTecnicos");
                const tecnicos = await res.json();

                tecnicos.forEach(t => {
                    const opt = document.createElement("option");
                    opt.value = t.id;
                    opt.textContent = t.nombre;
                    select.appendChild(opt);
                });

                modalAsignar.show();
            });
        });

        document.getElementById("btnGuardarTarea").addEventListener("click", async () => {
            const idTicket = document.getElementById("idTicketHidden").value;
            const titulo = document.getElementById("tituloTarea").value;
            const idTecnico = document.getElementById("tecnicoSelect").value;
            const descripcion = document.getElementById("descripcionTarea").value;
            console.log({ idTicket, titulo, idTecnico, descripcion });

            const respuesta = await fetch("https://localhost:7141/api/TareaTicket/crear", {
                method: "POST",
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({
                    idTicket: parseInt(idTicket),
                    titulo,
                    idTecnico: parseInt(idTecnico),
                    descripcion
                })
            });


            if (respuesta.ok) {
                alert("✅ Tarea asignada correctamente");
                location.reload();
            } else {
                alert("❌ Error al asignar tarea");
            }
        });



    });
</script>
