@model List<FrontEndTicketPro.Models.ticketDetalleDTO>

@{
    var ticket = Model.FirstOrDefault(); // toma el primer ticket o null si la lista está vacía
    // Listas estáticas para opciones
    var prioridades = new List<SelectListItem> {
        new SelectListItem { Value = "Crítico", Text = "Crítico" },
        new SelectListItem { Value = "Importante", Text = "Importante" },
        new SelectListItem { Value = "Baja", Text = "Baja" }
    };

    var estados = new List<SelectListItem> {
        new SelectListItem { Value = "En Progreso", Text = "En Progreso" }, /* Color azul */
        new SelectListItem { Value = "No asignado", Text = "No asignado" },/* Color amarillo */
        new SelectListItem { Value = "Resuelto", Text = "Resuelto" }, /* Color verde */
        new SelectListItem { Value = "En espera de información del cliente", Text = "En espera de información del cliente" } /* tu decision */
    };
}

@if (ticket == null)
{
    <div>No hay datos para mostrar.</div>
}
else
{
    <style>
        label {
            font-size: 17px;
        }

        .estado-en-progreso {
            background-color: #0d6efd; /* Azul Bootstrap */
            color: white;
        }

        .estado-no-asignado {
            background-color: #ffc107; /* Amarillo Bootstrap */
            color: black;
        }

        .estado-resuelto {
            background-color: #198754; /* Verde Bootstrap */
            color: white;
        }

        .estado-en-espera {
            background-color: #6c757d; /* Gris Bootstrap */
            color: white;
        }
    </style>

    <div class="container mt-4">
        <div class="h4 mb-4 justify-content-center text-center">Detalle del ticket</div>

        <div class="d-flex gap-5">
            <div class="col-6">
                <div class="mb-3">
                    <label class="form-label"><strong>Título:</strong></label>
                    <input type="text" class="form-control" value="@ticket.Titulo" />
                </div>

                <div class="mb-3">
                    <label class="form-label"><strong>Aplicación o servicio:</strong></label>
                    <input type="text" class="form-control" value="@ticket.Servicio" />
                </div>

                <div class="mb-3">
                    <label class="form-label"><strong>Descripción:</strong></label>
                    <textarea class="form-control" rows="3">@ticket.Descripcion</textarea>
                </div>

                <div class="mb-3">
                    <div class="d-flex justify-content-between align-items-center mb-2">
                        <label class="form-label mb-0"><strong>Cliente afectado:</strong></label>
                        <div class="d-flex align-items-center gap-2">
                            <label class="form-label mb-0"><strong>Archivos adjuntos:</strong></label>
                            <a href="#">Click aquí</a>
                        </div>
                    </div>
                    <textarea class="form-control" rows="3" style="white-space: pre-wrap; text-align: left; font-size:large" readonly>
                    @ticket.Cliente_Afectado
                    @ticket.Correo
                    @ticket.Telefono
                    </textarea>
                </div>
            </div>

            <div class="col-6">
                <div class="mb-3">
                    <label class="form-label"><strong>Ticket:</strong></label>
                    <input type="text" class="form-control" value="@ticket.Codigo" readonly/>
                </div>

                <div class="mb-4">
                    <label class="form-label"><strong>Categoria:</strong></label>
                    <input type="text" class="form-control" value="@ticket.Categoria_Ticket" />
                </div>

                <div class="mb-3">
                    <label><strong>Prioridad:</strong></label>
                    <select class="form-select" name="Prioridad_@ticket.Prioridad">
                        @foreach (var p in prioridades)
                        {
                            if (p.Value == ticket.Prioridad)
                            {
                                <option value="@p.Value" selected>@p.Text</option>
                            }
                            else
                            {
                                <option value="@p.Value">@p.Text</option>
                            }
                        }
                    </select>
                </div>

                <div class="d-flex justify-content-between align-items-end gap-4">
                    <div class="d-flex align-items-center gap-2 w-75">
                        <label for="estado" class="form-label mb-0"><strong>Estado:</strong></label>
                        <select class="form-select" id="estado" name="estado_@ticket.Estado" 
                                style="width: 170px;" onchange="cambiarColor(this)">
                            @foreach(var e in estados)
                            {
                                if(e.Value == ticket.Estado)
                                {
                                    <option value ="@e.Value" selected>@e.Text</option>
                                }
                                else
                                {
                                    <option value="@e.Value">@e.Text</option>
                                }
                            }
                        </select>
                    </div>
                    <button class="btn btn-secondary py-0 px-3" style="height: 38px;">Ver tareas</button>
                </div>

                <div class="d-flex justify-content-between" style="margin-top: 85px">
                    <button class="btn btn-secondary col-5">Actualizar Ticket</button>
                    <button class="btn btn-success col-5">Cerrar Ticket</button>
                </div>
            </div>
        </div>
    </div>
}

<script>
    function cambiarColor(select) {
        // Remueve clases anteriores
        select.classList.remove("estado-en-progreso", "estado-no-asignado", "estado-resuelto", "estado-en-espera");

        switch (select.value) {
            case "En Progreso":
                select.classList.add("estado-en-progreso");
                break;
            case "No asignado":
                select.classList.add("estado-no-asignado");
                break;
            case "Resuelto":
                select.classList.add("estado-resuelto");
                break;
            case "En espera de información del cliente":
                select.classList.add("estado-en-espera");
                break;
        }
    }

    // Aplica el color correcto al cargar la página
    document.addEventListener("DOMContentLoaded", function () {
        const select = document.getElementById("estado");
        cambiarColor(select);
    });
</script>


