@model FrontEndTicketPro.Models.tareaTicketViewModel
@{
    var tareas = Model;
}

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">

<style>
    body {
        background-color: #e9ecef;
    }

    .header-tarea {
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 0.5rem;
        margin-bottom: 1.5rem;
    }

        .header-tarea h1 {
            margin: 0;
            font-size: 2rem;
        }

    .codigo-ticket {
        font-size: 1.75rem;
        font-weight: 700;
        color: #333;
        margin-top: 5px;
    }

    .input-group {
        border-radius: 0.5rem;
        overflow: hidden;
        border: 1px solid #ced4da;
    }

        .input-group .form-control {
            border: none;
            box-shadow: none;
        }

    .input-group-text {
        border: none;
        background-color: #fff;
    }

    table {
        border-radius: 0.5rem;
        border-collapse: separate !important;
        border-spacing: 0;
        margin-bottom: 1rem;
        border: 1px solid #dee2e6;
        width: 100%;
        background-color: white;
    }

    thead tr {
        border-bottom: 1px solid black !important;
    }

    thead th {
        border: none !important;
        font-weight: 600;
        color: #212529;
    }

    tbody td {
        border-top: none !important;
        border-bottom: none !important;
    }

    tbody tr:hover {
        background-color: #f8f9fa;
    }

    .btn-agregar {
        background-color: #198754;
        border-color: #198754;
        color: white;
    }

        .btn-agregar:hover {
            background-color: #157347;
            border-color: #146c43;
            color: white;
        }

    .btn-regresar {
        border: 1px solid black;
        background-color: white;
        color: black;
        padding: 0.75rem 2.5rem;
        font-size: 1.25rem;
        border-radius: 0.375rem;
        margin: 1.5rem auto 0 auto;
        display: block;
        cursor: pointer;
        text-align: center;
    }

        .btn-regresar:hover {
            background-color: #f8f9fa;
        }

    .ventana-tarea {
        border-radius: 0.5rem;
        padding: 2rem;
        box-shadow: 2px 2px 8px rgba(0, 0, 0, 0.1);
        background-color: #fff;
    }

    .estado-en-progreso {
        background-color: #0d6efd;
        color: white;
    }

    .estado-asignado {
        background-color: #ffc107;
        color: white;
    }

    .estado-finalizado {
        background-color: #198754;
        color: white;
    }

    .estado-descartado, .estado-desconocido {
        background-color: #dc3545;
        color: white;
    }

    .estado-en-progreso, .estado-asignado, .estado-finalizado, .estado-descartado, .estado-desconocido {
        font-weight: bold;
        border-radius: 0.375rem;
        padding: 0.25rem 0.5rem;
        display: inline-block;
    }
</style>

<div class="container mt-5">
    <div class="ventana-tarea">
        <div class="header-tarea">
            <h1 class="display-5">Tareas del Ticket:</h1>
            <span class="codigo-ticket"> #@tareas.Codigo</span>
        </div>

        <div class="mb-4">
            <div class="col-md-6 mb-2">
                <label class="form-label fw-bold">Título del ticket:</label>
                <p class="form-control-plaintext">@tareas.Titulo</p>
            </div>
            <div class="col-md-6 mb-2">
                <label class="form-label fw-bold">Descripción del ticket:</label>
                <p class="form-control-plaintext">@tareas.Descripcion</p>
            </div>
        </div>

        <div class="d-flex justify-content-between align-items-center mb-4">
            <div class="input-group w-50">
                <span class="input-group-text"><i class="bi bi-search"></i></span>
                <input type="text" class="form-control" placeholder="Buscar tarea..." id="buscadorTarea">
            </div>
            <button class="btn btn-agregar col-4" data-bs-toggle="modal" data-bs-target="#modalAgregarTarea">Agregar tarea</button>
        </div>

        <table class="table">
            <thead>
                <tr>
                    <th>Usuario asignado</th>
                    <th>Título</th>
                    <th>Estado</th>
                    <th>Fecha</th>
                    <th>Acciones</th>
                </tr>
            </thead>
            <tbody id="tablaTareas">
                @foreach (var tarea in tareas.Tareas)
                {
                    var estadoClase = (tarea.Estado ?? "").Trim().ToLower() switch
                    {
                        "en progreso" => "estado-en-progreso",
                        "asignada" => "estado-asignado",
                        "finalizada" => "estado-finalizado",
                        "descartado" => "estado-descartado",
                        _ => "estado-desconocido"
                    };
                    <tr>
                        <td>@tarea.UsuarioAsignado</td>
                        <td>@tarea.Nombre</td>
                        <td><span class="@estadoClase">@tarea.Estado</span></td>
                        <td>@tarea.FechaInicio.ToShortDateString()</td>
                        <td>
                            <button class="btn btn-sm btn-outline-secondary editar-tarea"
                                    data-nombre="@tarea.Nombre"
                                    data-estado="@tarea.Estado"
                                    data-descripcion="@tarea.Descripcion">
                                <i class="bi bi-pencil-square"></i>
                            </button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>

        <a href="@Url.Action("IndexDetalleTicket", "Ticket", new { id_ticket = ViewBag.id_ticket })" class="btn btn-regresar">Regresar</a>
    </div>
</div>

<!-- Modal Agregar Tarea -->
<div class="modal fade" id="modalAgregarTarea" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <form id="formAgregarTarea">
                <div class="modal-header">
                    <h5 class="modal-title">Agregar tarea</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <input type="hidden" id="inputIdTicket" value="@Model.IdTicket" />
                    <div class="mb-3">
                        <label class="form-label">Título</label>
                        <input type="text" class="form-control" id="tituloTarea" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Estado</label>
                        <select class="form-select" id="estadoTarea" required>
                            <option>Asignada</option>
                            <option>En progreso</option>
                            <option>Finalizada</option>
                            <option>Descartado</option>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Técnico</label>
                        <select class="form-select" id="tecnicoTarea" required>
                            @foreach (var t in Model.Tecnicos)
                            {
                                <option value="@t.Value">@t.Text</option>
                            }
                        </select>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Descripción</label>
                        <textarea class="form-control" id="descripcionTarea" required></textarea>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-success">Guardar</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Modal Editar Tarea -->
<div class="modal fade" id="modalEditarTarea" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <form id="formEditarTarea">
                <div class="modal-header">
                    <h5 class="modal-title">Editar tarea</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <label>Título</label>
                        <input type="text" id="editarTitulo" class="form-control" readonly />
                    </div>
                    <div class="mb-3">
                        <label>Estado</label>
                        <select id="editarEstado" class="form-select">
                            <option>Asignada</option>
                            <option>En progreso</option>
                            <option>Finalizada</option>
                            <option>Descartado</option>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label>Agregar progreso</label>
                        <textarea id="editarProgreso" class="form-control"></textarea>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                    <button type="submit" class="btn btn-success">Guardar</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const buscador = document.getElementById('buscadorTarea');
            const tabla = document.getElementById('tablaTareas');
            buscador.addEventListener('input', function () {
                const texto = this.value.toLowerCase();
                for (let fila of tabla.rows) {
                    const nombre = fila.cells[1].innerText.toLowerCase();
                    fila.style.display = nombre.includes(texto) ? '' : 'none';
                }
            });

            let tareaActual = "";

            document.querySelectorAll('.editar-tarea').forEach(btn => {
                btn.addEventListener('click', function () {
                    const titulo = this.getAttribute('data-nombre');
                    const estado = this.getAttribute('data-estado');
                    const descripcion = this.getAttribute('data-descripcion');

                    tareaActual = titulo;

                    document.getElementById('editarTitulo').value = titulo;
                    document.getElementById('editarEstado').value = estado;
                    document.getElementById('editarProgreso').value = descripcion;

                    new bootstrap.Modal(document.getElementById('modalEditarTarea')).show();
                });
            });

            document.getElementById('formEditarTarea').addEventListener('submit', async function (e) {
                e.preventDefault();
                const estado = document.getElementById('editarEstado').value;
                const descripcion = document.getElementById('editarProgreso').value;
                const idTicket = '@Model.IdTicket';
                const data = {
                    IdTicket: parseInt(idTicket),
                    Nombre: tareaActual,
                    Estado: estado,
                    Descripcion: descripcion,
                    FechaInicio: new Date().toISOString()
                };
                try {
                    const response = await fetch('https://localhost:7141/api/ticket/ActualizarTarea', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify(data)
                    });
                    if (response.ok) {
                        alert("✅ Tarea actualizada correctamente");
                        location.reload();
                    } else {
                        const mensaje = await response.text();
                        alert("❌ Error al actualizar tarea: " + mensaje);
                    }
                } catch (error) {
                    console.error(error);
                    alert("❌ Error de red al intentar actualizar la tarea.");
                }
            });

            document.getElementById('formAgregarTarea').addEventListener('submit', async function (e) {
                e.preventDefault();
                const idTicket = parseInt(document.getElementById('inputIdTicket').value);
                const nombre = document.getElementById('tituloTarea').value;
                const estado = document.getElementById('estadoTarea').value;
                const descripcion = document.getElementById('descripcionTarea').value;
                const idUsuarioInterno = parseInt(document.getElementById('tecnicoTarea').value);

                const nuevaTarea = {
                    IdTicket: idTicket,
                    Nombre: nombre,
                    Estado: estado,
                    Descripcion: descripcion,
                    IdUsuarioInterno: idUsuarioInterno,
                    FechaInicio: new Date().toISOString()
                };

                try {
                    const response = await fetch("https://localhost:7141/api/ticket/AgregarNuevaTarea", {
                        method: "POST",
                        headers: { "Content-Type": "application/json" },
                        body: JSON.stringify(nuevaTarea)
                    });

                    if (response.ok) {
                        alert("✅ Tarea agregada");
                        location.reload();
                    } else {
                        const error = await response.text();
                        alert("❌ Error: " + error);
                    }
                } catch (err) {
                    alert("❌ Error de red: " + err.message);
                }
            });
        });
    </script>
}
